/* 插入排序 */
//自己实现的插入排序，内层循环有问题，依旧是遍历了所有的数据
function insertSort(arr) {
  //1.遍历输入的数组
  for (let i = 1; i < arr.length; i++) {
    //2.第一个元素已经排好序，从第二个开始
    //3.在已经排好序的数组中循环查找，
    for (let j = 0; j < i; j++) {
      //4.如果待插入的元素小于当前元素，则插入当前元素之前
      if (arr[j] > arr[i]) {
        //5.把该元素插入进去
        //6.后一个元素后面的元素都往后移动
        let tmp = arr.splice(i, 1);
        arr.splice(j, 0, tmp[0]);
        //6.1 跳出本次循环
        break;
      }
    }
    //7.没有找到，位置不变，不做处理
  }
  return arr;
}

//1. 从下标为1的位置开始进行插入，
    //2. 保存要插入的数据
    //3. 初始化要开始比较的排列好的元素位置
    //4. 循环比较要插入元素和前一个元素
    //5. 如果要插入元素小，则把要插入元素后移，并把指标向前移动一个
    //6.把保存的数据加入第j个位置
function insertSort1(arr){
  let length = arr.length;
  for(let i=1;i<length;i++){
    let tmp = arr[i];
    let j = i;
    while( tmp > tmp&&j>0){
      arr[j] = arr[j-1];
      j--;
    }
    arr[j] = tmp;
  }
  return arr;
}

console.time("insertSort");
insertSort([
  11,
  4,
  5,
  22,
  65,
  76,
  1,
  3,
  7,
  65,
  223,
  62,
  412126,
  126126512,
  61236,
  2462,
  23,
  223,
  62,
  412126,
  126126512,
  61236,
  2462,
  23423423,
  423,
  4234,
  23623667868,
  6734,
  6,
  645,
  12321423423,
  423,
  4234,
  2,
  223,
  62,
  412126,
  126126512,
  61236,
  2462,
  23423423,
  423,
  4234,
  23623667868,
  6734,
  6,
  645,
  123213623667868,
  6734,
  6,
  645,
  12321,
]);
console.timeEnd("insertSort");

console.time("insertSort1");
insertSort1([
  11,
  4,
  5,
  22,
  65,
  76,
  1,
  3,
  7,
  65,
  223,
  62,
  412126,
  126126512,
  61236,
  2462,
  23,
  223,
  62,
  412126,
  126126512,
  61236,
  2462,
  23423423,
  423,
  4234,
  23623667868,
  6734,
  6,
  645,
  12321423423,
  423,
  4234,
  2,
  223,
  62,
  412126,
  126126512,
  61236,
  2462,
  23423423,
  423,
  4234,
  23623667868,
  6734,
  6,
  645,
  123213623667868,
  6734,
  6,
  645,
  12321,
]);
console.timeEnd("insertSort1");